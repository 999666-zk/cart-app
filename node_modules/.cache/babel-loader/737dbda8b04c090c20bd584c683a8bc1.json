{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport { createNamespace } from '../utils';\nimport { ChildrenMixin } from '../mixins/relation';\nimport { BORDER_BOTTOM } from '../utils/constant';\nimport { getScrollTop, getRootScrollTop } from '../utils/dom/scroll';\n\nvar _createNamespace = createNamespace('index-anchor'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [ChildrenMixin('vanIndexBar', {\n    indexKey: 'childrenIndex'\n  })],\n  props: {\n    index: [Number, String]\n  },\n  data: function data() {\n    return {\n      top: 0,\n      left: null,\n      rect: {\n        top: 0,\n        height: 0\n      },\n      width: null,\n      active: false\n    };\n  },\n  computed: {\n    sticky: function sticky() {\n      return this.active && this.parent.sticky;\n    },\n    anchorStyle: function anchorStyle() {\n      if (this.sticky) {\n        return {\n          zIndex: \"\" + this.parent.zIndex,\n          left: this.left ? this.left + \"px\" : null,\n          width: this.width ? this.width + \"px\" : null,\n          transform: \"translate3d(0, \" + this.top + \"px, 0)\",\n          color: this.parent.highlightColor\n        };\n      }\n    }\n  },\n  mounted: function mounted() {\n    var rect = this.$el.getBoundingClientRect();\n    this.rect.height = rect.height;\n  },\n  methods: {\n    scrollIntoView: function scrollIntoView() {\n      this.$el.scrollIntoView();\n    },\n    getRect: function getRect(scroller, scrollerRect) {\n      var el = this.$el;\n      var elRect = el.getBoundingClientRect();\n      this.rect.height = elRect.height;\n\n      if (scroller === window || scroller === document.body) {\n        this.rect.top = elRect.top + getRootScrollTop();\n      } else {\n        this.rect.top = elRect.top + getScrollTop(scroller) - scrollerRect.top;\n      }\n\n      return this.rect;\n    }\n  },\n  render: function render() {\n    var _ref;\n\n    var h = arguments[0];\n    var sticky = this.sticky;\n    return h(\"div\", {\n      \"style\": {\n        height: sticky ? this.rect.height + \"px\" : null\n      }\n    }, [h(\"div\", {\n      \"style\": this.anchorStyle,\n      \"class\": [bem({\n        sticky: sticky\n      }), (_ref = {}, _ref[BORDER_BOTTOM] = sticky, _ref)]\n    }, [this.slots('default') || this.index])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}