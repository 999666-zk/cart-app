{"ast":null,"code":"import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace } from '../utils';\nimport { inherit, emit } from '../utils/functional'; // Components\n\nimport Icon from '../icon'; // Types\n\nvar _createNamespace = createNamespace('tag'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction Tag(h, props, slots, ctx) {\n  var _style;\n\n  var type = props.type,\n      mark = props.mark,\n      plain = props.plain,\n      color = props.color,\n      round = props.round,\n      size = props.size,\n      textColor = props.textColor;\n  var key = plain ? 'color' : 'backgroundColor';\n  var style = (_style = {}, _style[key] = color, _style);\n\n  if (plain) {\n    style.color = textColor || color;\n    style.borderColor = color;\n  } else {\n    style.color = textColor;\n    style.background = color;\n  }\n\n  var classes = {\n    mark: mark,\n    plain: plain,\n    round: round\n  };\n\n  if (size) {\n    classes[size] = size;\n  }\n\n  var CloseIcon = props.closeable && h(Icon, {\n    \"attrs\": {\n      \"name\": \"cross\"\n    },\n    \"class\": bem('close'),\n    \"on\": {\n      \"click\": function click(event) {\n        event.stopPropagation();\n        emit(ctx, 'close');\n      }\n    }\n  });\n  return h(\"transition\", {\n    \"attrs\": {\n      \"name\": props.closeable ? 'van-fade' : null\n    }\n  }, [h(\"span\", _mergeJSXProps([{\n    \"key\": \"content\",\n    \"style\": style,\n    \"class\": bem([classes, type])\n  }, inherit(ctx, true)]), [slots[\"default\"] == null ? void 0 : slots[\"default\"](), CloseIcon])]);\n}\n\nTag.props = {\n  size: String,\n  mark: Boolean,\n  color: String,\n  plain: Boolean,\n  round: Boolean,\n  textColor: String,\n  closeable: Boolean,\n  type: {\n    type: String,\n    \"default\": 'default'\n  }\n};\nexport default createComponent(Tag);","map":null,"metadata":{},"sourceType":"module"}