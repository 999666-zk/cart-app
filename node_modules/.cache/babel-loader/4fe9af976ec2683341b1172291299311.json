{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\n// Utils\nimport { createNamespace } from '../../utils'; // Components\n\nimport Uploader from '../../uploader';\nvar namespace = createNamespace('sku-img-uploader');\nvar createComponent = namespace[0];\nvar t = namespace[2];\nexport default createComponent({\n  props: {\n    value: String,\n    uploadImg: Function,\n    customUpload: Function,\n    maxSize: {\n      type: Number,\n      \"default\": 6\n    }\n  },\n  data: function data() {\n    return {\n      fileList: []\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (val) {\n        this.fileList = [{\n          url: val,\n          isImage: true\n        }];\n      } else {\n        this.fileList = [];\n      }\n    }\n  },\n  methods: {\n    afterReadFile: function afterReadFile(file) {\n      var _this = this;\n\n      file.status = 'uploading';\n      file.message = t('uploading');\n      this.uploadImg(file.file, file.content).then(function (img) {\n        file.status = 'done';\n\n        _this.$emit('input', img);\n      })[\"catch\"](function () {\n        file.status = 'failed';\n        file.message = t('fail');\n      });\n    },\n    onOversize: function onOversize() {\n      this.$toast(t('oversize', this.maxSize));\n    },\n    onDelete: function onDelete() {\n      this.$emit('input', '');\n    },\n    onClickUpload: function onClickUpload() {\n      var _this2 = this;\n\n      if (this.customUpload) {\n        this.customUpload().then(function (url) {\n          _this2.fileList.push({\n            url: url\n          });\n\n          _this2.$emit('input', url);\n        });\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    return h(Uploader, {\n      \"attrs\": {\n        \"maxCount\": 1,\n        \"readonly\": !!this.customUpload,\n        \"maxSize\": this.maxSize * 1024 * 1024,\n        \"afterRead\": this.afterReadFile\n      },\n      \"on\": {\n        \"oversize\": this.onOversize,\n        \"delete\": this.onDelete,\n        \"click-upload\": this.onClickUpload\n      },\n      \"model\": {\n        value: _this3.fileList,\n        callback: function callback($$v) {\n          _this3.fileList = $$v;\n        }\n      }\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}