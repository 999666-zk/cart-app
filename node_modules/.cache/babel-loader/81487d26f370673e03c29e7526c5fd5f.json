{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace } from '../utils';\nimport { emit, inherit } from '../utils/functional'; // Components\n\nimport Button from '../button';\nimport RadioGroup from '../radio-group';\nimport AddressItem from './Item'; // Types\n\nvar _createNamespace = createNamespace('address-list'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nfunction AddressList(h, props, slots, ctx) {\n  function genList(list, disabled) {\n    if (!list) {\n      return;\n    }\n\n    return list.map(function (item, index) {\n      return h(AddressItem, {\n        \"attrs\": {\n          \"data\": item,\n          \"disabled\": disabled,\n          \"switchable\": props.switchable,\n          \"defaultTagText\": props.defaultTagText\n        },\n        \"key\": item.id,\n        \"scopedSlots\": {\n          bottom: slots['item-bottom'],\n          tag: slots.tag\n        },\n        \"on\": {\n          \"select\": function select() {\n            emit(ctx, disabled ? 'select-disabled' : 'select', item, index);\n\n            if (!disabled) {\n              emit(ctx, 'input', item.id);\n            }\n          },\n          \"edit\": function edit() {\n            emit(ctx, disabled ? 'edit-disabled' : 'edit', item, index);\n          },\n          \"click\": function click() {\n            emit(ctx, 'click-item', item, index);\n          }\n        }\n      });\n    });\n  }\n\n  var List = genList(props.list);\n  var DisabledList = genList(props.disabledList, true);\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem()\n  }, inherit(ctx)]), [slots.top == null ? void 0 : slots.top(), h(RadioGroup, {\n    \"attrs\": {\n      \"value\": props.value\n    }\n  }, [List]), props.disabledText && h(\"div\", {\n    \"class\": bem('disabled-text')\n  }, [props.disabledText]), DisabledList, slots[\"default\"] == null ? void 0 : slots[\"default\"](), h(\"div\", {\n    \"class\": bem('bottom')\n  }, [h(Button, {\n    \"attrs\": {\n      \"round\": true,\n      \"block\": true,\n      \"type\": \"danger\",\n      \"text\": props.addButtonText || t('add')\n    },\n    \"class\": bem('add'),\n    \"on\": {\n      \"click\": function click() {\n        emit(ctx, 'add');\n      }\n    }\n  })])]);\n}\n\nAddressList.props = {\n  list: Array,\n  value: [Number, String],\n  disabledList: Array,\n  disabledText: String,\n  addButtonText: String,\n  defaultTagText: String,\n  switchable: {\n    type: Boolean,\n    \"default\": true\n  }\n};\nexport default createComponent(AddressList);","map":null,"metadata":{},"sourceType":"module"}