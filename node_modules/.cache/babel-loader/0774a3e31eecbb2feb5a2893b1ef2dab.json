{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\n// Utils\nimport { createNamespace } from '../../utils';\nimport { stringToDate, dateToString } from '../utils/time-helper'; // Components\n\nimport Popup from '../../popup';\nimport DateTimePicker from '../../datetime-picker';\nimport Field from '../../field';\nvar namespace = createNamespace('sku-datetime-field');\nvar createComponent = namespace[0];\nvar t = namespace[2];\nexport default createComponent({\n  props: {\n    value: String,\n    label: String,\n    required: Boolean,\n    placeholder: String,\n    type: {\n      type: String,\n      \"default\": 'date'\n    }\n  },\n  data: function data() {\n    return {\n      showDatePicker: false,\n      currentDate: this.type === 'time' ? '' : new Date(),\n      minDate: new Date(new Date().getFullYear() - 60, 0, 1)\n    };\n  },\n  watch: {\n    value: function value(val) {\n      switch (this.type) {\n        case 'time':\n          this.currentDate = val;\n          break;\n\n        case 'date':\n        case 'datetime':\n          this.currentDate = stringToDate(val) || new Date();\n          break;\n      }\n    }\n  },\n  computed: {\n    title: function title() {\n      return t(\"title.\" + this.type);\n    }\n  },\n  methods: {\n    onClick: function onClick() {\n      this.showDatePicker = true;\n    },\n    onConfirm: function onConfirm(val) {\n      var data = val;\n\n      if (this.type !== 'time') {\n        data = dateToString(val, this.type);\n      }\n\n      this.$emit('input', data);\n      this.showDatePicker = false;\n    },\n    onCancel: function onCancel() {\n      this.showDatePicker = false;\n    },\n    formatter: function formatter(type, val) {\n      var word = t(\"format.\" + type);\n      return \"\" + val + word;\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n    return h(Field, {\n      \"attrs\": {\n        \"readonly\": true,\n        \"is-link\": true,\n        \"center\": true,\n        \"value\": this.value,\n        \"label\": this.label,\n        \"required\": this.required,\n        \"placeholder\": this.placeholder\n      },\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(Popup, {\n      \"attrs\": {\n        \"round\": true,\n        \"position\": \"bottom\",\n        \"getContainer\": \"body\"\n      },\n      \"slot\": \"extra\",\n      \"model\": {\n        value: _this.showDatePicker,\n        callback: function callback($$v) {\n          _this.showDatePicker = $$v;\n        }\n      }\n    }, [h(DateTimePicker, {\n      \"attrs\": {\n        \"type\": this.type,\n        \"title\": this.title,\n        \"value\": this.currentDate,\n        \"minDate\": this.minDate,\n        \"formatter\": this.formatter\n      },\n      \"on\": {\n        \"cancel\": this.onCancel,\n        \"confirm\": this.onConfirm\n      }\n    })])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}