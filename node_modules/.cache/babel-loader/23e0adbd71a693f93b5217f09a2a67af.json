{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // Utils\n\nimport { createNamespace } from '../utils';\nimport { isAndroid } from '../utils/validate/system'; // Components\n\nimport Cell from '../cell';\nimport Field from '../field';\n\nvar _createNamespace = createNamespace('address-edit-detail'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nvar android = isAndroid();\nexport default createComponent({\n  props: {\n    value: String,\n    errorMessage: String,\n    focused: Boolean,\n    detailRows: [Number, String],\n    searchResult: Array,\n    detailMaxlength: [Number, String],\n    showSearchResult: Boolean\n  },\n  computed: {\n    shouldShowSearchResult: function shouldShowSearchResult() {\n      return this.focused && this.searchResult && this.showSearchResult;\n    }\n  },\n  methods: {\n    onSelect: function onSelect(express) {\n      this.$emit('select-search', express);\n      this.$emit('input', ((express.address || '') + \" \" + (express.name || '')).trim());\n    },\n    onFinish: function onFinish() {\n      this.$refs.field.blur();\n    },\n    genFinish: function genFinish() {\n      var h = this.$createElement;\n      var show = this.value && this.focused && android;\n\n      if (show) {\n        return h(\"div\", {\n          \"class\": bem('finish'),\n          \"on\": {\n            \"click\": this.onFinish\n          }\n        }, [t('complete')]);\n      }\n    },\n    genSearchResult: function genSearchResult() {\n      var _this = this;\n\n      var h = this.$createElement;\n      var value = this.value,\n          shouldShowSearchResult = this.shouldShowSearchResult,\n          searchResult = this.searchResult;\n\n      if (shouldShowSearchResult) {\n        return searchResult.map(function (express) {\n          return h(Cell, {\n            \"key\": express.name + express.address,\n            \"attrs\": {\n              \"clickable\": true,\n              \"border\": false,\n              \"icon\": \"location-o\",\n              \"label\": express.address\n            },\n            \"class\": bem('search-item'),\n            \"on\": {\n              \"click\": function click() {\n                _this.onSelect(express);\n              }\n            },\n            \"scopedSlots\": {\n              title: function title() {\n                if (express.name) {\n                  var text = express.name.replace(value, \"<span class=\" + bem('keyword') + \">\" + value + \"</span>\");\n                  return h(\"div\", {\n                    \"domProps\": {\n                      \"innerHTML\": text\n                    }\n                  });\n                }\n              }\n            }\n          });\n        });\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(Cell, {\n      \"class\": bem()\n    }, [h(Field, {\n      \"attrs\": {\n        \"autosize\": true,\n        \"rows\": this.detailRows,\n        \"clearable\": !android,\n        \"type\": \"textarea\",\n        \"value\": this.value,\n        \"errorMessage\": this.errorMessage,\n        \"border\": !this.shouldShowSearchResult,\n        \"label\": t('label'),\n        \"maxlength\": this.detailMaxlength,\n        \"placeholder\": t('placeholder')\n      },\n      \"ref\": \"field\",\n      \"scopedSlots\": {\n        icon: this.genFinish\n      },\n      \"on\": _extends({}, this.$listeners)\n    }), this.genSearchResult()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}