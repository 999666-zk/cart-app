{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // Utils\n\nimport { createNamespace } from '../utils';\nimport { isMobile } from '../utils/validate/mobile'; // Components\n\nimport Cell from '../cell';\nimport Field from '../field';\nimport Button from '../button';\nimport Dialog from '../dialog';\nimport Switch from '../switch';\n\nvar _createNamespace = createNamespace('contact-edit'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nvar defaultContact = {\n  tel: '',\n  name: ''\n};\nexport default createComponent({\n  props: {\n    isEdit: Boolean,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    showSetDefault: Boolean,\n    setDefaultLabel: String,\n    contactInfo: {\n      type: Object,\n      \"default\": function _default() {\n        return _extends({}, defaultContact);\n      }\n    },\n    telValidator: {\n      type: Function,\n      \"default\": isMobile\n    }\n  },\n  data: function data() {\n    return {\n      data: _extends({}, defaultContact, this.contactInfo),\n      errorInfo: {\n        name: '',\n        tel: ''\n      }\n    };\n  },\n  watch: {\n    contactInfo: function contactInfo(val) {\n      this.data = _extends({}, defaultContact, val);\n    }\n  },\n  methods: {\n    onFocus: function onFocus(key) {\n      this.errorInfo[key] = '';\n    },\n    getErrorMessageByKey: function getErrorMessageByKey(key) {\n      var value = this.data[key].trim();\n\n      switch (key) {\n        case 'name':\n          return value ? '' : t('nameInvalid');\n\n        case 'tel':\n          return this.telValidator(value) ? '' : t('telInvalid');\n      }\n    },\n    onSave: function onSave() {\n      var _this = this;\n\n      var isValid = ['name', 'tel'].every(function (item) {\n        var msg = _this.getErrorMessageByKey(item);\n\n        if (msg) {\n          _this.errorInfo[item] = msg;\n        }\n\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n    onDelete: function onDelete() {\n      var _this2 = this;\n\n      Dialog.confirm({\n        title: t('confirmDelete')\n      }).then(function () {\n        _this2.$emit('delete', _this2.data);\n      });\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    var data = this.data,\n        errorInfo = this.errorInfo;\n\n    var onFocus = function onFocus(name) {\n      return function () {\n        return _this3.onFocus(name);\n      };\n    };\n\n    return h(\"div\", {\n      \"class\": bem()\n    }, [h(\"div\", {\n      \"class\": bem('fields')\n    }, [h(Field, {\n      \"attrs\": {\n        \"clearable\": true,\n        \"maxlength\": \"30\",\n        \"label\": t('name'),\n        \"placeholder\": t('nameEmpty'),\n        \"errorMessage\": errorInfo.name\n      },\n      \"on\": {\n        \"focus\": onFocus('name')\n      },\n      \"model\": {\n        value: data.name,\n        callback: function callback($$v) {\n          _this3.$set(data, \"name\", $$v);\n        }\n      }\n    }), h(Field, {\n      \"attrs\": {\n        \"clearable\": true,\n        \"type\": \"tel\",\n        \"label\": t('tel'),\n        \"placeholder\": t('telEmpty'),\n        \"errorMessage\": errorInfo.tel\n      },\n      \"on\": {\n        \"focus\": onFocus('tel')\n      },\n      \"model\": {\n        value: data.tel,\n        callback: function callback($$v) {\n          _this3.$set(data, \"tel\", $$v);\n        }\n      }\n    })]), this.showSetDefault && h(Cell, {\n      \"attrs\": {\n        \"title\": this.setDefaultLabel,\n        \"border\": false\n      },\n      \"class\": bem('switch-cell')\n    }, [h(Switch, {\n      \"attrs\": {\n        \"size\": 24\n      },\n      \"slot\": \"right-icon\",\n      \"on\": {\n        \"change\": function change(event) {\n          _this3.$emit('change-default', event);\n        }\n      },\n      \"model\": {\n        value: data.isDefault,\n        callback: function callback($$v) {\n          _this3.$set(data, \"isDefault\", $$v);\n        }\n      }\n    })]), h(\"div\", {\n      \"class\": bem('buttons')\n    }, [h(Button, {\n      \"attrs\": {\n        \"block\": true,\n        \"round\": true,\n        \"type\": \"danger\",\n        \"text\": t('save'),\n        \"loading\": this.isSaving\n      },\n      \"on\": {\n        \"click\": this.onSave\n      }\n    }), this.isEdit && h(Button, {\n      \"attrs\": {\n        \"block\": true,\n        \"round\": true,\n        \"text\": t('delete'),\n        \"loading\": this.isDeleting\n      },\n      \"on\": {\n        \"click\": this.onDelete\n      }\n    })])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}