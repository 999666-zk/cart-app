{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\n// Utils\nimport { createNamespace } from '../utils'; // Components\n\nimport Tab from '../tab';\nimport Tabs from '../tabs';\nimport Field from '../field';\nimport Button from '../button';\nimport Coupon from '../coupon';\n\nvar _createNamespace = createNamespace('coupon-list'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nvar EMPTY_IMAGE = 'https://img01.yzcdn.cn/vant/coupon-empty.png';\nexport default createComponent({\n  model: {\n    prop: 'code'\n  },\n  props: {\n    code: String,\n    closeButtonText: String,\n    inputPlaceholder: String,\n    enabledTitle: String,\n    disabledTitle: String,\n    exchangeButtonText: String,\n    exchangeButtonLoading: Boolean,\n    exchangeButtonDisabled: Boolean,\n    exchangeMinLength: {\n      type: Number,\n      \"default\": 1\n    },\n    chosenCoupon: {\n      type: Number,\n      \"default\": -1\n    },\n    coupons: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    disabledCoupons: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    displayedCouponIndex: {\n      type: Number,\n      \"default\": -1\n    },\n    showExchangeBar: {\n      type: Boolean,\n      \"default\": true\n    },\n    showCloseButton: {\n      type: Boolean,\n      \"default\": true\n    },\n    showCount: {\n      type: Boolean,\n      \"default\": true\n    },\n    currency: {\n      type: String,\n      \"default\": 'Â¥'\n    },\n    emptyImage: {\n      type: String,\n      \"default\": EMPTY_IMAGE\n    }\n  },\n  data: function data() {\n    return {\n      tab: 0,\n      winHeight: window.innerHeight,\n      currentCode: this.code || ''\n    };\n  },\n  computed: {\n    buttonDisabled: function buttonDisabled() {\n      return !this.exchangeButtonLoading && (this.exchangeButtonDisabled || !this.currentCode || this.currentCode.length < this.exchangeMinLength);\n    },\n    listStyle: function listStyle() {\n      return {\n        height: this.winHeight - (this.showExchangeBar ? 140 : 94) + 'px'\n      };\n    }\n  },\n  watch: {\n    code: function code(_code) {\n      this.currentCode = _code;\n    },\n    currentCode: function currentCode(code) {\n      this.$emit('input', code);\n    },\n    displayedCouponIndex: 'scrollToShowCoupon'\n  },\n  mounted: function mounted() {\n    this.scrollToShowCoupon(this.displayedCouponIndex);\n  },\n  methods: {\n    onClickExchangeButton: function onClickExchangeButton() {\n      this.$emit('exchange', this.currentCode); // auto clear currentCode when not use vModel\n\n      if (!this.code) {\n        this.currentCode = '';\n      }\n    },\n    // scroll to show specific coupon\n    scrollToShowCoupon: function scrollToShowCoupon(index) {\n      var _this = this;\n\n      if (index === -1) {\n        return;\n      }\n\n      this.$nextTick(function () {\n        var _this$$refs = _this.$refs,\n            card = _this$$refs.card,\n            list = _this$$refs.list;\n        /* istanbul ignore next */\n\n        if (list && card && card[index]) {\n          list.scrollTop = card[index].$el.offsetTop - 100;\n        }\n      });\n    },\n    genEmpty: function genEmpty() {\n      var h = this.$createElement;\n      return h(\"div\", {\n        \"class\": bem('empty')\n      }, [h(\"img\", {\n        \"attrs\": {\n          \"src\": this.emptyImage\n        }\n      }), h(\"p\", [t('empty')])]);\n    },\n    genExchangeButton: function genExchangeButton() {\n      var h = this.$createElement;\n      return h(Button, {\n        \"attrs\": {\n          \"plain\": true,\n          \"type\": \"danger\",\n          \"text\": this.exchangeButtonText || t('exchange'),\n          \"loading\": this.exchangeButtonLoading,\n          \"disabled\": this.buttonDisabled\n        },\n        \"class\": bem('exchange'),\n        \"on\": {\n          \"click\": this.onClickExchangeButton\n        }\n      });\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var h = arguments[0];\n    var coupons = this.coupons,\n        disabledCoupons = this.disabledCoupons;\n    var count = this.showCount ? \" (\" + coupons.length + \")\" : '';\n    var title = (this.enabledTitle || t('enable')) + count;\n    var disabledCount = this.showCount ? \" (\" + disabledCoupons.length + \")\" : '';\n    var disabledTitle = (this.disabledTitle || t('disabled')) + disabledCount;\n    var ExchangeBar = this.showExchangeBar && h(\"div\", {\n      \"class\": bem('exchange-bar')\n    }, [h(Field, {\n      \"attrs\": {\n        \"clearable\": true,\n        \"border\": false,\n        \"placeholder\": this.inputPlaceholder || t('placeholder'),\n        \"maxlength\": \"20\"\n      },\n      \"class\": bem('field'),\n      \"model\": {\n        value: _this2.currentCode,\n        callback: function callback($$v) {\n          _this2.currentCode = $$v;\n        }\n      }\n    }), this.genExchangeButton()]);\n\n    var onChange = function onChange(index) {\n      return function () {\n        return _this2.$emit('change', index);\n      };\n    };\n\n    var CouponTab = h(Tab, {\n      \"attrs\": {\n        \"title\": title\n      }\n    }, [h(\"div\", {\n      \"class\": bem('list', {\n        'with-bottom': this.showCloseButton\n      }),\n      \"style\": this.listStyle\n    }, [coupons.map(function (coupon, index) {\n      return h(Coupon, {\n        \"ref\": \"card\",\n        \"key\": coupon.id,\n        \"attrs\": {\n          \"coupon\": coupon,\n          \"currency\": _this2.currency,\n          \"chosen\": index === _this2.chosenCoupon\n        },\n        \"nativeOn\": {\n          \"click\": onChange(index)\n        }\n      });\n    }), !coupons.length && this.genEmpty(), this.slots('list-footer')])]);\n    var DisabledCouponTab = h(Tab, {\n      \"attrs\": {\n        \"title\": disabledTitle\n      }\n    }, [h(\"div\", {\n      \"class\": bem('list', {\n        'with-bottom': this.showCloseButton\n      }),\n      \"style\": this.listStyle\n    }, [disabledCoupons.map(function (coupon) {\n      return h(Coupon, {\n        \"attrs\": {\n          \"disabled\": true,\n          \"coupon\": coupon,\n          \"currency\": _this2.currency\n        },\n        \"key\": coupon.id\n      });\n    }), !disabledCoupons.length && this.genEmpty(), this.slots('disabled-list-footer')])]);\n    return h(\"div\", {\n      \"class\": bem()\n    }, [ExchangeBar, h(Tabs, {\n      \"class\": bem('tab'),\n      \"attrs\": {\n        \"border\": false\n      },\n      \"model\": {\n        value: _this2.tab,\n        callback: function callback($$v) {\n          _this2.tab = $$v;\n        }\n      }\n    }, [CouponTab, DisabledCouponTab]), h(\"div\", {\n      \"class\": bem('bottom')\n    }, [h(Button, {\n      \"directives\": [{\n        name: \"show\",\n        value: this.showCloseButton\n      }],\n      \"attrs\": {\n        \"round\": true,\n        \"type\": \"danger\",\n        \"block\": true,\n        \"text\": this.closeButtonText || t('close')\n      },\n      \"class\": bem('close'),\n      \"on\": {\n        \"click\": onChange(-1)\n      }\n    })])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}