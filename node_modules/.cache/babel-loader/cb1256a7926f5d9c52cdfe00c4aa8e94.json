{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace } from '../utils';\nimport { emit, inherit } from '../utils/functional'; // Components\n\nimport Icon from '../icon';\nimport Button from '../button'; // Types\n\nvar _createNamespace = createNamespace('submit-bar'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nfunction SubmitBar(h, props, slots, ctx) {\n  var tip = props.tip,\n      price = props.price,\n      tipIcon = props.tipIcon;\n\n  function Text() {\n    if (typeof price === 'number') {\n      var priceArr = (price / 100).toFixed(props.decimalLength).split('.');\n      var decimalStr = props.decimalLength ? \".\" + priceArr[1] : '';\n      return h(\"div\", {\n        \"style\": {\n          textAlign: props.textAlign ? props.textAlign : ''\n        },\n        \"class\": bem('text')\n      }, [h(\"span\", [props.label || t('label')]), h(\"span\", {\n        \"class\": bem('price')\n      }, [props.currency, h(\"span\", {\n        \"class\": bem('price', 'integer')\n      }, [priceArr[0]]), decimalStr]), props.suffixLabel && h(\"span\", {\n        \"class\": bem('suffix-label')\n      }, [props.suffixLabel])]);\n    }\n  }\n\n  function Tip() {\n    if (slots.tip || tip) {\n      return h(\"div\", {\n        \"class\": bem('tip')\n      }, [tipIcon && h(Icon, {\n        \"class\": bem('tip-icon'),\n        \"attrs\": {\n          \"name\": tipIcon\n        }\n      }), tip && h(\"span\", {\n        \"class\": bem('tip-text')\n      }, [tip]), slots.tip && slots.tip()]);\n    }\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem({\n      unfit: !props.safeAreaInsetBottom\n    })\n  }, inherit(ctx)]), [slots.top && slots.top(), Tip(), h(\"div\", {\n    \"class\": bem('bar')\n  }, [slots[\"default\"] && slots[\"default\"](), Text(), slots.button ? slots.button() : h(Button, {\n    \"attrs\": {\n      \"round\": true,\n      \"type\": props.buttonType,\n      \"text\": props.loading ? '' : props.buttonText,\n      \"color\": props.buttonColor,\n      \"loading\": props.loading,\n      \"disabled\": props.disabled\n    },\n    \"class\": bem('button', props.buttonType),\n    \"on\": {\n      \"click\": function click() {\n        emit(ctx, 'submit');\n      }\n    }\n  })])]);\n}\n\nSubmitBar.props = {\n  tip: String,\n  label: String,\n  price: Number,\n  tipIcon: String,\n  loading: Boolean,\n  disabled: Boolean,\n  textAlign: String,\n  buttonText: String,\n  buttonColor: String,\n  suffixLabel: String,\n  safeAreaInsetBottom: {\n    type: Boolean,\n    \"default\": true\n  },\n  decimalLength: {\n    type: [Number, String],\n    \"default\": 2\n  },\n  currency: {\n    type: String,\n    \"default\": 'Â¥'\n  },\n  buttonType: {\n    type: String,\n    \"default\": 'danger'\n  }\n};\nexport default createComponent(SubmitBar);","map":null,"metadata":{},"sourceType":"module"}