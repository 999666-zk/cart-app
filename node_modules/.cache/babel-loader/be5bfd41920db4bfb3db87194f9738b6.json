{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { createNamespace } from '../../utils';\nimport { LIMIT_TYPE } from '../constants';\nimport Stepper from '../../stepper';\nvar namespace = createNamespace('sku-stepper');\nvar createComponent = namespace[0];\nvar t = namespace[2];\nvar QUOTA_LIMIT = LIMIT_TYPE.QUOTA_LIMIT,\n    STOCK_LIMIT = LIMIT_TYPE.STOCK_LIMIT;\nexport default createComponent({\n  props: {\n    stock: Number,\n    skuEventBus: Object,\n    skuStockNum: Number,\n    selectedNum: Number,\n    stepperTitle: String,\n    disableStepperInput: Boolean,\n    customStepperConfig: Object,\n    hideQuotaText: Boolean,\n    quota: {\n      type: Number,\n      \"default\": 0\n    },\n    quotaUsed: {\n      type: Number,\n      \"default\": 0\n    },\n    startSaleNum: {\n      type: Number,\n      \"default\": 1\n    }\n  },\n  data: function data() {\n    return {\n      currentNum: this.selectedNum,\n      // 购买限制类型: 限购/库存\n      limitType: STOCK_LIMIT\n    };\n  },\n  watch: {\n    currentNum: function currentNum(num) {\n      var intValue = parseInt(num, 10);\n\n      if (intValue >= this.stepperMinLimit && intValue <= this.stepperLimit) {\n        this.skuEventBus.$emit('sku:numChange', intValue);\n      }\n    },\n    stepperLimit: function stepperLimit(limit) {\n      if (limit < this.currentNum && this.stepperMinLimit <= limit) {\n        this.currentNum = limit;\n      }\n\n      this.checkState(this.stepperMinLimit, limit);\n    },\n    stepperMinLimit: function stepperMinLimit(start) {\n      if (start > this.currentNum || start > this.stepperLimit) {\n        this.currentNum = start;\n      }\n\n      this.checkState(start, this.stepperLimit);\n    }\n  },\n  computed: {\n    stepperLimit: function stepperLimit() {\n      var quotaLimit = this.quota - this.quotaUsed;\n      var limit; // 无限购时直接取库存，有限购时取限购数和库存数中小的那个\n\n      if (this.quota > 0 && quotaLimit <= this.stock) {\n        // 修正负的limit\n        limit = quotaLimit < 0 ? 0 : quotaLimit;\n        this.limitType = QUOTA_LIMIT;\n      } else {\n        limit = this.stock;\n        this.limitType = STOCK_LIMIT;\n      }\n\n      return limit;\n    },\n    stepperMinLimit: function stepperMinLimit() {\n      return this.startSaleNum < 1 ? 1 : this.startSaleNum;\n    },\n    quotaText: function quotaText() {\n      var _this$customStepperCo = this.customStepperConfig,\n          quotaText = _this$customStepperCo.quotaText,\n          hideQuotaText = _this$customStepperCo.hideQuotaText;\n      if (hideQuotaText) return '';\n      var text = '';\n\n      if (quotaText) {\n        text = quotaText;\n      } else {\n        var textArr = [];\n\n        if (this.startSaleNum > 1) {\n          textArr.push(t('quotaStart', this.startSaleNum));\n        }\n\n        if (this.quota > 0) {\n          textArr.push(t('quotaLimit', this.quota));\n        }\n\n        text = textArr.join(t('comma'));\n      }\n\n      return text;\n    }\n  },\n  created: function created() {\n    this.checkState(this.stepperMinLimit, this.stepperLimit);\n  },\n  methods: {\n    setCurrentNum: function setCurrentNum(num) {\n      this.currentNum = num;\n      this.checkState(this.stepperMinLimit, this.stepperLimit);\n    },\n    onOverLimit: function onOverLimit(action) {\n      this.skuEventBus.$emit('sku:overLimit', {\n        action: action,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed,\n        startSaleNum: this.startSaleNum\n      });\n    },\n    onChange: function onChange(currentValue) {\n      var intValue = parseInt(currentValue, 10);\n      var handleStepperChange = this.customStepperConfig.handleStepperChange;\n      handleStepperChange && handleStepperChange(intValue);\n      this.$emit('change', intValue);\n    },\n    checkState: function checkState(min, max) {\n      // 如果选择小于起售，则强制变为起售\n      if (this.currentNum < min || min > max) {\n        this.currentNum = min;\n      } else if (this.currentNum > max) {\n        // 当前选择数量大于最大可选时，需要重置已选数量\n        this.currentNum = max;\n      }\n\n      this.skuEventBus.$emit('sku:stepperState', {\n        valid: min <= max,\n        min: min,\n        max: max,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed,\n        startSaleNum: this.startSaleNum\n      });\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": \"van-sku-stepper-stock\"\n    }, [h(\"div\", {\n      \"class\": \"van-sku__stepper-title\"\n    }, [this.stepperTitle || t('num')]), h(Stepper, {\n      \"attrs\": {\n        \"integer\": true,\n        \"min\": this.stepperMinLimit,\n        \"max\": this.stepperLimit,\n        \"disableInput\": this.disableStepperInput\n      },\n      \"class\": \"van-sku__stepper\",\n      \"on\": {\n        \"overlimit\": this.onOverLimit,\n        \"change\": this.onChange\n      },\n      \"model\": {\n        value: _this.currentNum,\n        callback: function callback($$v) {\n          _this.currentNum = $$v;\n        }\n      }\n    }), !this.hideQuotaText && this.quotaText && h(\"span\", {\n      \"class\": \"van-sku__stepper-quota\"\n    }, [\"(\", this.quotaText, \")\"])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}